1. What's worth doing?</br>
- Prioritization methods</br>
- "The most perfect is DONE"</br></br>
2. What are we creating?</br>
- A swing according to the client, sales, marketing, engineers, etc.</br>
- Mental models</br>
- It's not uncommon to have everyone leave the table with different ideas, even though they were all saying the same thing</br>
- Write it down!</br></br>
3. What value does it provide?
- Focus on ONE type of user (persona). The more details you use to describe this particular person the better</br>
- What do users expect</br>
- Differentiators</br>
- Stakeholders diagram. Product. Who influences, who finances, who creates, who delivers, who manages, who sells/promotes, who supports, who uses</br></br>

What is success?</br>
- What needs to happen once we launch?</br>
- How does each stakeholder define and measure success?</br></br>

Customer decision path</br>
- Perceive need</br>
- Identify options</br>
- Narrow choices</br>
- Choose need</br>
- Service after sale</br></br>

- How much information does a user need to make a decision (from step to step)</br>
- How much do they need to interact with in order to act</br>
- How should this information be organized and prioritized</br></br>

- Balance between no info and information overload</br>
- PROGRESSIVE DISCLOSURE</br>
-- From simple to complex</br>
-- We only need enough to get to the next task</br>
-- We only need what we asked for</br></br>

- Symptoms vs underlying problem</br></br>

- Scope creep:</br>
== Document assumptions for anything you don't know</br>
-- Document what you're doing right now</br>

Testing:</br>
- Plan testing even before having mocks</br>
- Prioritize browser and devices</br>
-- Functionality</br>
--- (a) Links. Internal and external links, links that bring users to your websites, orphan pages</br>
--- (b) Forms. Validations, default values, incorrect input, CRUD</br>
--- (c) Cookies. What happens if user disables cookies, are cookies encrypted, test session cookies for login and stats</br>
--- (d) HTML and CSS. Validate HTML errors (validator.w3.org), check that the site is crawlable (googl.com/webmaster)</br>
--- (e) Database. Data integrity when CRUD, queries are executing correctly, CRUD</br></br>
-- Usability</br>
--- (a) Navigation. Do users find what they need. How long does it take to find it. Does the structure matches user expectations. Do label terms make sense to users.</br>
--- (b) Usefulness. Do users get what they came here for?</br>
--- (c) UI. Clearly separate navigation from content. Does the UI distract or create barries to content. Is it clear what can be acted upon. Do all UI elements work together to  guide users through a flow. Tools: www.usertesting.com, Loop11 and Optimizely </br>
--- (d) Task success. Can users accomplish what they came here for. Were they satisfied or frustrated. What prevented them from succeeding. What's the cost of task failure for the user and for the business.</br></br>
-- Errors and exceptions</br>
--- Intercation between servers. Errors handed properly. Displayed to users. Clear and instructive language. Transaction interrruption.</br></br>
-- Compatibility</br>
--- (a) Browser. Consistency across browsers, across OS. Mashable.com browser testing tool.</br>
--- (b) Devices. All functionality, web services and APIs. Fonts and CSS.</br></br>
-- Performance</br>
--- Web load testing. High volume.</br>
--- Stress test. What happens when it is stretched?</br></br>
-- Security</br>
--- Pasting internal URL without logging in. Change URL while logged in. Invalid entries in forms. Logging for all transactions should be in place.</br></br>